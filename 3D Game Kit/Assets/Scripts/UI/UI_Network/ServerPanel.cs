//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QFramework.HeNuoApp
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.UI;
    
    
    public class ServerPanelData : QFramework.UIPanelData
    {
        public int onlineCount = 0;
        public bool hasData;
        public Queue<string> msgs = new Queue<string>();
    }
    
    public partial class ServerPanel : QFramework.UIPanel
    {
        
        protected override void ProcessMsg(int eventId, QFramework.QMsg msg)
        {

        }
        
        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as ServerPanelData ?? new ServerPanelData();
            // please add init code here
            OnlineCount.text = "0";
            MsgCount.text = "0";
            Server.NetGameServer.ServerLog += Server_ServerLog;
            ServerStartOrStop.onClick.AddListener(() =>
            {
                Server.ServerManager.Instance.OnClick();
                if (Server.ServerManager.Instance.runServer)
                {
                    StartOrStopText.text = "Í£Ö¹";
                    ServerStartOrStop.interactable = false;
                }
                else
                    StartOrStopText.text = "Æô¶¯";
            });
            Text_IP.text = "IP:" + QF.Network.GetAddressIP();

        }

        private void Update()
        {
            if (mData.onlineCount!= Server.ServerManager.Instance.server.OnLineCount)
            {
                OnlineCount.text = Server.ServerManager.Instance.server.OnLineCount.ToString();
            }
            if (mData.msgs.Count > 0)
            {
                string msg = mData.msgs.Dequeue();
                MsgContent.text += string.Format("[{0}]:{1}\n", DateTime.Now.ToString(), msg);
            }
        }



        private void Server_ServerLog(string msg)
        {
            mData.msgs.Enqueue(msg);
        }

        protected override void OnOpen(QFramework.IUIData uiData)
        {
        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
        }
        
        protected override void OnClose()
        {
        }
    }
}
