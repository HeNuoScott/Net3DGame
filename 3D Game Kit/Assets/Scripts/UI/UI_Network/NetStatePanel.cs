//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QFramework.HeNuoApp
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.UI;
    
    
    public class NetStatePanelData : QFramework.UIPanelData
    {
        public Net.Share.ConnectState connectState = Net.Share.ConnectState.None;
        public Client.ClientNetworkManager clientNetworkManager;
    }
    
    public partial class NetStatePanel : QFramework.UIPanel
    {
        
        protected override void ProcessMsg(int eventId, QFramework.QMsg msg)
        {
            throw new System.NotImplementedException ();
        }
        
        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as NetStatePanelData ?? new NetStatePanelData();
            // please add init code here
            mData.clientNetworkManager = Client.ClientNetworkManager.Instance;
        }
        
        protected override void OnOpen(QFramework.IUIData uiData)
        {
        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
        }
        
        protected override void OnClose()
        {
        }

        private void Update()
        {
            if (mData.connectState!= mData.clientNetworkManager.client.ConnectState)
            {
                mData.connectState = mData.clientNetworkManager.client.ConnectState;
                switch (mData.connectState)
                {
                    case Net.Share.ConnectState.None:
                        Title_Text.text = "无状态".ToMarkup(Color.gray);
                        break;
                    case Net.Share.ConnectState.Connected:
                        Title_Text.text = "连接成功".ToMarkup(Color.green);
                        break;
                    case Net.Share.ConnectState.ConnectFailed:
                        Title_Text.text = "连接失败".ToMarkup(Color.red);
                        break;
                    case Net.Share.ConnectState.TryToConnect:
                        Title_Text.text = "尝试重连".ToMarkup(Color.yellow);
                        break;
                    case Net.Share.ConnectState.Disconnect:
                        Title_Text.text = "断开连接".ToMarkup(Color.red);
                        break;
                    case Net.Share.ConnectState.ConnectLost:
                        Title_Text.text = "连接中断 (连接异常)".ToMarkup(Color.red);
                        break;
                    case Net.Share.ConnectState.ConnectClosed:
                        Title_Text.text = "连接已被关闭".ToMarkup(Color.red);
                        break;
                    case Net.Share.ConnectState.Connection:
                        Title_Text.text = "连接正常".ToMarkup(Color.green);
                        break;
                    case Net.Share.ConnectState.Reconnect:
                        Title_Text.text = "断线重连成功".ToMarkup(Color.green);
                        break;
                    default:
                        break;
                }
            }
        }
    }
}
