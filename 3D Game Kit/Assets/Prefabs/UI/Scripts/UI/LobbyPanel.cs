//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QFramework.HeNuoApp
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.UI;
    
    
    public class LobbyPanelData : QFramework.UIPanelData
    {
        public List<Net.Server.NetScene> netScenes = new List<Net.Server.NetScene>();
        public Dictionary<string, ScenePanel> ScenePanels = new Dictionary<string, ScenePanel>();
    }
    
    public partial class LobbyPanel : QFramework.UIPanel
    {
        
        protected override void ProcessMsg(int eventId, QFramework.QMsg msg)
        {
            throw new System.NotImplementedException ();
        }
        
        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as LobbyPanelData ?? new LobbyPanelData();
            // please add init code here

            //获取用户信息
            StartCoroutine(GetUserInfo());
            //接收聊天消息
            Client.ChatManager.ShowMassage += ChatManager_ShowMassage;
            //发送消息
            Button_Send.onClick.AddListener(() =>
            {
                string msg = InputField_Msg.text.Trim();
                if (msg != null && msg != "")
                {
                    Client.ChatManager.Instance.SendMsg(msg);
                    InputField_Msg.text = "";
                }
            });

            Client.ClientNetworkManager.UndataNetScenes += ClientNetworkManager_UndataNetScenes;
        }

        protected override void OnOpen(QFramework.IUIData uiData)
        {
        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
        }
        
        protected override void OnClose()
        {
            Client.ChatManager.ShowMassage -= ChatManager_ShowMassage;
            Client.ClientNetworkManager.UndataNetScenes -= ClientNetworkManager_UndataNetScenes;
        }

        private IEnumerator GetUserInfo()
        {
            bool isGetUserInfo = false;
            while (!isGetUserInfo)
            {
                if (Client.ClientNetworkManager.Instance.Acc == "" || Client.ClientNetworkManager.Instance.Acc == null)
                {
                    yield return new WaitForSeconds(5);
                }
                else
                {
                    PlayerName_Text.text = Client.ClientNetworkManager.Instance.Acc;
                    isGetUserInfo = true;
                    yield break;
                }
            }
        }

        private void ChatManager_ShowMassage(string msg)
        {
            MsgContent.text += msg;
        }

        private void ClientNetworkManager_UndataNetScenes(List<Net.Server.NetScene> scenes)
        {
            //1.
            //遍历现有的场景信息去对比 新得到的场景信息,
            //如有现有的信息在 新来的场景信息中找不到说明场景已经销毁  删除场景
            //2.
            //遍历新来的场景信息  对比刚刚删除 销毁掉场景之后的场景信息
            //如果 有对应场景  查看更改
            //如果没有对应场景  新增场景

        }
    }
}
